load("//build_extensions:axt_android_aar.bzl", "axt_android_aar")
load("//build_extensions:maven_artifact.bzl", "maven_artifact")
load(
    "//build_extensions:axt_versions.bzl",
    "CORE_ARTIFACT",
)
load("@io_bazel_rules_kotlin//kotlin:android.bzl", "kt_android_library")

# Description: Build rules for building androidx.test.core from source
licenses(["notice"])

package(
    default_visibility = [
        "//visibility:public",
    ],
)

kt_android_library(
    name = "core_internal",
    srcs = glob(
        [
            "**/*.java",
            "**/*.kt",
        ],
        exclude = glob(["lint/*.kt"]),
    ),
    exports_manifest = 1,
    manifest = "AndroidManifest.xml",
    resource_files = glob(["res/**"]),
    tags = [
        "alt_dep=//core",
        "maven_coordinates=%s" % CORE_ARTIFACT,
    ],
    visibility = ["//visibility:private"],
    deps = [
        "//:androidx_annotation",
        "//:androidx_concurrent_futures",
        "//:androidx_lifecycle_common",
        "//:androidx_tracing",
        "//annotation",
        "//runner/monitor",
        "//services/storage",
        "@maven_listenablefuture//:com_google_guava_listenablefuture",
    ],
)

# TODO(b/199522848): delete these targets once espresso moves to testonly
android_library(
    name = "core",
    testonly = 1,
    tags = [
        "maven_coordinates=%s" % CORE_ARTIFACT,
    ],
    exports = [":core_internal"],
)

android_library(
    name = "core_not_test_only",
    tags = [
        "maven_coordinates=%s" % CORE_ARTIFACT,
    ],
    visibility = ["//espresso/core/java/androidx/test/espresso:__subpackages__"],
    exports = [":core_internal"],
)

# kt_android_library does not produce an aar, so wrap in a android_library for release
android_library(
    name = "core_release_lib",
    manifest = "AndroidManifest.xml",
    resource_files = glob(["res/**"]),
    tags = [
        "maven_coordinates=%s" % CORE_ARTIFACT,
    ],
    visibility = ["//visibility:private"],
    exports = [
        ":core_internal",
    ],
)

# Generate rules for the release artifacts.
axt_android_aar(
    name = "core_release",
    included_dep = ":core_release_lib",
)

maven_artifact(
    name = "core_maven_artifact",
    last_updated = "20180403000000",
    target = ":core_release",
)
