# Espresso Web Actions
load("//build_extensions:axt_versions.bzl", "ESPRESSO_WEB_ARTIFACT")

licenses(["notice"])

package(default_visibility = ["//visibility:public"])

android_library(
    name = "action",
    srcs = glob(
        ["*.java"],
    ),
    custom_package = "androidx.test.espresso.web.action",
    idl_import_root = "idls",
    idl_srcs = glob(["idls/**"]),
    tags = [
        "maven_coordinates=%s" % ESPRESSO_WEB_ARTIFACT,
    ],
    deps = [
        "//:androidx_annotation",
        "//espresso/core/java/androidx/test/espresso:framework",
        "//espresso/core/java/androidx/test/espresso:interface",
        "//espresso/core/java/androidx/test/espresso/matcher",
        "//espresso/core/java/androidx/test/espresso/remote:bindable",
        "//espresso/core/java/androidx/test/espresso/remote:interface",
        "//espresso/core/java/androidx/test/espresso/remote/annotation:remote_msg_annotations",
        "//espresso/core/java/androidx/test/espresso/util",
        "//espresso/core/java/androidx/test/espresso/util/concurrent",
        "//espresso/web/java/androidx/test/espresso/web/bridge",
        "//espresso/web/java/androidx/test/espresso/web/model",
        "//espresso/web/java/androidx/test/espresso/web/util/concurrent",
        "//runner/monitor",
        "@maven//:androidx_concurrent_concurrent_futures",
        "@maven//:com_google_code_findbugs_jsr305",
        "@maven//:org_hamcrest_hamcrest_core",
        "@maven//:org_jetbrains_kotlin_kotlin_stdlib",
        "@maven_listenablefuture//:com_google_guava_listenablefuture",
    ],
)
